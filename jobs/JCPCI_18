#!/bin/sh

###########################################
# Set up environment for cpci
###########################################
set -xa
export PS4='$SECONDS + ' 
date

###############################
# Specify NET and RUN name
###############################
export DATA=${DATA:-${DATAROOT}/${jobid}}
#
if [ -d $DATA ]; then
  rm -rf $DATA
fi
mkdir -p $DATA
cd $DATA 

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${$$}"
export pgmout="OUTPUT.${$$}"

export cycle=${cycle:-t${cyc}z} 

############################################
#SENDCOM=YES       copy output file to /com
#SENDDBN=YES       alert data out to TOC
#SENDECF=YES       send message back to ecFlow
############################################
export SENDCOM=${SENDCOM:-NO}
export SENDDBN=${SENDDBN:-NO}
export SENDECF=${SENDECF:-NO}

###################################
# Set up restart variable RERUN (default = NO)
# (YES means start from the beginning,
# NO means pick up where forecast left off, if able to)
###################################
export HOMEcpci=${HOMEcpci:-${NWROOT}/cpci.${cpci_ver}}
export EXECcpci=${EXECcpci:-$HOMEcpci/scripts}
export FIXcpci=${FIXcpci:-$HOMEcpci/fix}
export USHcpci=${USHcpci:-$HOMEcpci/ush}
#

# Run setpdy and initialize PDY variables
setpdy.sh
. PDY
#
if [ "$RUN" == 'gdas' ]; then
  export COMIN=${COMIN:-$(compath.py ${NET}/prod/${RUN}.${PDY})}
  export COMINnawips=${COMINnawips:-${COMIN}/${cyc}/atmos/gempak}
fi
if [ "$RUN" == 'gefs' ]; then
  export COMIN=${COMIN:-$(compath.py ${NET}/prod/${RUN}.${PDY})}
  export COMINnawips=${COMINnawips:-${COMIN}/${cyc}/atmos/gempak}
fi
if [ "$RUN" == 'gfs' ]; then
  export COMIN=${COMIN:-$(compath.py ${NET}/prod/${RUN}.${PDY})}
  export COMINnawips=${COMINnawips:-${COMIN}/${cyc}/atmos/gempak}
fi
export TAROUT=${TAROUT:-${COMROOT}/${model}/${envir}/${model}.${PDY}/${RUN}}
export COMOUT=${COMOUT:-${COMROOT}/${model}/${envir}/${model}.${PDY}/${RUN}/${cyc}}
mkdir -p $COMOUT
env
###################################################
# Execute the Script
#
${HOMEcpci}/scripts/excpci_${RUN}.sh.ecf
#
###################################################

cat $pgmout

msg="JOB ${model} FOR PROJECT=${RUN} HAS COMPLETED NORMALLY."
postmsg "$jlogfile" "$msg"

date
#
if [ "$KEEPDATA" != 'YES' ]; then
   rm -rf $DATA
fi
